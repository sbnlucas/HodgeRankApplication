name: Build and Release HodgeRankApp

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build app for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            dotnet-url: https://download.visualstudio.microsoft.com/download/pr/57ec3a8e-59dd-4e52-950c-5ab4453bbaf7/2e4c199c9b4f4b4e8a2e2f2f2f2f2f2f/dotnet-runtime-6.0.20-linux-x64.tar.gz
          - os: windows-latest
            dotnet-url: https://dotnet.microsoft.com/download/dotnet/thank-you/runtime-6.0.20-windows-x64-installer
          - os: macos-latest
            dotnet-url: https://download.visualstudio.microsoft.com/download/pr/57ec3a8e-59dd-4e52-950c-5ab4453bbaf7/2e4c199c9b4f4b4e8a2e2f2f2f2f2f2f/dotnet-runtime-6.0.20-osx-x64.tar.gz

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdiplus

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install mono-libgdiplus

      - name: Download .NET Runtime
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            curl -L -o dotnet-runtime.exe "${{ matrix.dotnet-url }}"
          else
            curl -L -o dotnet-runtime.tar.gz "${{ matrix.dotnet-url }}"
            mkdir dotnet-runtime
            tar -xzf dotnet-runtime.tar.gz -C dotnet-runtime
          fi

      - name: Extract .NET Runtime (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ./dotnet-runtime.exe /extract:dotnet-runtime /quiet

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pythonnet

      - name: Find pythonnet runtime path
        run: |
          python -c "import site; import os; print(os.path.join(site.getsitepackages()[0], 'pythonnet'))" > python_path.txt
          cat python_path.txt

      - name: Build app (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          python_path=$(cat python_path.txt)
          streamlit-desktop-app build PythonCodes/app.py --name HodgeRankApp --icon assets/icon.ico --pyinstaller-options "--add-data \"$python_path:pythonnet\" --add-data \"dotnet-runtime:dotnet\"" --noconfirm

      - name: Build app (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $pythonPath = Get-Content python_path.txt | Select-Object -First 1
          streamlit-desktop-app build PythonCodes/app.py --name HodgeRankApp --icon assets/icon.ico --pyinstaller-options "--add-data \"$pythonPath;pythonnet\" --add-data \"dotnet-runtime;dotnet\"" --noconfirm

      - name: List dist folder (debug)
        run: ls -R dist

      - name: Zip build output (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd dist
          zip -r "../${{ matrix.os }}-HodgeRankApp.zip" *

      - name: Zip build output (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist
          Compress-Archive -Path * -DestinationPath "../Windows-HodgeRankApp.zip"

      - name: Upload zipped build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: ./*.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all builds
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            ./dist/build-ubuntu-latest/ubuntu-latest-HodgeRankApp.zip
            ./dist/build-windows-latest/Windows-HodgeRankApp.zip
            ./dist/build-macos-latest/macos-latest-HodgeRankApp.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}